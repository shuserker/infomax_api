{
  "file_path": "run_migration_verification.sh",
  "file_type": ".sh",
  "content": "#!/bin/bash\n# POSCO 워치햄스터 v2.0 마이그레이션 검증 실행 스크립트\n# Migration Verification Execution Script for POSCO WatchHamster v2.0\n\nset -e  # 오류 시 중단\n\necho \"🚀 POSCO 워치햄스터 v2.0 마이그레이션 검증 시스템 실행\"\necho \"==================================================================\"\n\n# 색상 정의\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nPURPLE='\\033[0;35m'\nCYAN='\\033[0;36m'\nNC='\\033[0m' # No Color\n\nprint_step() {\n    echo -e \"${BLUE}[단계 $1]${NC} $2\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}✅ $1${NC}\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}⚠️ $1${NC}\"\n}\n\nprint_error() {\n    echo -e \"${RED}❌ $1${NC}\"\n}\n\nprint_info() {\n    echo -e \"${CYAN}ℹ️ $1${NC}\"\n}\n\n# 사용법 출력\nshow_usage() {\n    echo \"사용법: $0 [옵션]\"\n    echo \"\"\n    echo \"옵션:\"\n    echo \"  --full              전체 검증 실행 (기본값)\"\n    echo \"  --backup-only       백업 검증만 실행\"\n    echo \"  --rollback-only     롤백 테스트만 실행\"\n    echo \"  --post-only         마이그레이션 후 검증만 실행\"\n    echo \"  --report-only       보고서 생성만 실행\"\n    echo \"  --test-system       검증 시스템 자체 테스트\"\n    echo \"  --cleanup           오래된 로그 정리\"\n    echo \"  --help              이 도움말 표시\"\n    echo \"\"\n    echo \"예시:\"\n    echo \"  $0                  # 전체 검증 실행\"\n    echo \"  $0 --backup-only    # 백업 검증만 실행\"\n    echo \"  $0 --test-system    # 검증 시스템 테스트\"\n}\n\n# 환경 확인\ncheck_environment() {\n    print_step \"0\" \"환경 확인\"\n    \n    # Python 확인\n    if ! command -v python3 &> /dev/null; then\n        print_error \"Python3가 설치되지 않았습니다\"\n        exit 1\n    fi\n    \n    PYTHON_VERSION=$(python3 --version 2>&1 | cut -d' ' -f2)\n    print_success \"Python 버전: $PYTHON_VERSION\"\n    \n    # 필수 스크립트 확인\n    REQUIRED_SCRIPTS=(\n        \"migration_verification_system.py\"\n        \"test_rollback_functionality.py\"\n        \"post_migration_verification.py\"\n        \"migration_status_reporter.py\"\n    )\n    \n    for script in \"${REQUIRED_SCRIPTS[@]}\"; do\n        if [ -f \"$script\" ]; then\n            print_success \"$script 존재 확인\"\n        else\n            print_error \"$script 파일이 없습니다\"\n            exit 1\n        fi\n    done\n    \n    # 실행 권한 확인\n    if [ ! -w \".\" ]; then\n        print_error \"현재 디렉토리에 쓰기 권한이 없습니다\"\n        exit 1\n    fi\n    \n    print_success \"환경 확인 완료\"\n}\n\n# 백업 검증 실행\nrun_backup_verification() {\n    print_step \"1\" \"백업 안전성 검증\"\n    \n    if python3 migration_verification_system.py backup-check; then\n        print_success \"백업 검증 완료\"\n        return 0\n    else\n        print_error \"백업 검증 실패\"\n        return 1\n    fi\n}\n\n# 롤백 기능 테스트\nrun_rollback_test() {\n    print_step \"2\" \"롤백 기능 테스트\"\n    \n    # 롤백 통합 테스트 실행\n    if python3 test_rollback_functionality.py; then\n        print_success \"롤백 기능 테스트 완료\"\n        return 0\n    else\n        print_error \"롤백 기능 테스트 실패\"\n        return 1\n    fi\n}\n\n# 마이그레이션 후 검증\nrun_post_migration_verification() {\n    print_step \"3\" \"마이그레이션 후 검증\"\n    \n    if python3 post_migration_verification.py; then\n        print_success \"마이그레이션 후 검증 완료\"\n        return 0\n    else\n        print_error \"마이그레이션 후 검증 실패\"\n        return 1\n    fi\n}\n\n# 종합 보고서 생성\ngenerate_comprehensive_report() {\n    print_step \"4\" \"종합 보고서 생성\"\n    \n    # 마이그레이션 검증 시스템 보고서\n    if python3 migration_verification_system.py report; then\n        print_success \"검증 시스템 보고서 생성 완료\"\n    else\n        print_warning \"검증 시스템 보고서 생성 실패\"\n    fi\n    \n    # 상태 보고 시스템 보고서\n    if python3 migration_status_reporter.py report; then\n        print_success \"상태 보고 시스템 보고서 생성 완료\"\n    else\n        print_warning \"상태 보고 시스템 보고서 생성 실패\"\n    fi\n    \n    # 통합 보고서 생성\n    TIMESTAMP=$(date +%Y%m%d_%H%M%S)\n    INTEGRATED_REPORT=\"integrated_migration_verification_report_${TIMESTAMP}.txt\"\n    \n    {\n        echo \"==================================================================\"\n        echo \"POSCO 워치햄스터 v2.0 마이그레이션 검증 통합 보고서\"\n        echo \"==================================================================\"\n        echo \"생성 시간: $(date '+%Y-%m-%d %H:%M:%S')\"\n        echo \"실행 스크립트: $0 $*\"\n        echo \"\"\n        \n        echo \"📋 실행된 검증 항목\"\n        echo \"------------------------------------------------------------------\"\n        if [ \"$BACKUP_RESULT\" = \"0\" ]; then\n            echo \"✅ 백업 안전성 검증: 통과\"\n        else\n            echo \"❌ 백업 안전성 검증: 실패\"\n        fi\n        \n        if [ \"$ROLLBACK_RESULT\" = \"0\" ]; then\n            echo \"✅ 롤백 기능 테스트: 통과\"\n        else\n            echo \"❌ 롤백 기능 테스트: 실패\"\n        fi\n        \n        if [ \"$POST_MIGRATION_RESULT\" = \"0\" ]; then\n            echo \"✅ 마이그레이션 후 검증: 통과\"\n        else\n            echo \"❌ 마이그레이션 후 검증: 실패\"\n        fi\n        \n        echo \"\"\n        echo \"📊 전체 결과 요약\"\n        echo \"------------------------------------------------------------------\"\n        \n        TOTAL_TESTS=3\n        PASSED_TESTS=0\n        \n        [ \"$BACKUP_RESULT\" = \"0\" ] && PASSED_TESTS=$((PASSED_TESTS + 1))\n        [ \"$ROLLBACK_RESULT\" = \"0\" ] && PASSED_TESTS=$((PASSED_TESTS + 1))\n        [ \"$POST_MIGRATION_RESULT\" = \"0\" ] && PASSED_TESTS=$((PASSED_TESTS + 1))\n        \n        echo \"전체 테스트: ${TOTAL_TESTS}개\"\n        echo \"통과: ${PASSED_TESTS}개\"\n        echo \"실패: $((TOTAL_TESTS - PASSED_TESTS))개\"\n        \n        if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then\n            echo \"\"\n            echo \"🎉 결론: 모든 검증이 성공적으로 완료되었습니다!\"\n            echo \"   마이그레이션이 안전하게 완료되었으며 시스템이 정상 작동합니다.\"\n        else\n            echo \"\"\n            echo \"❌ 결론: 일부 검증이 실패했습니다.\"\n            echo \"   실패한 항목을 검토하고 필요시 롤백을 고려하세요.\"\n            echo \"   롤백 명령어: ./rollback_migration.sh\"\n        fi\n        \n        echo \"\"\n        echo \"📞 지원 정보\"\n        echo \"------------------------------------------------------------------\"\n        echo \"- 상세 로그: migration_logs/ 디렉토리\"\n        echo \"- 개별 보고서: migration_reports/ 디렉토리\"\n        echo \"- 검증 재실행: $0\"\n        echo \"- 롤백 실행: ./rollback_migration.sh\"\n        \n        echo \"\"\n        echo \"==================================================================\"\n        \n    } > \"$INTEGRATED_REPORT\"\n    \n    print_success \"통합 보고서 생성: $INTEGRATED_REPORT\"\n}\n\n# 검증 시스템 자체 테스트\nrun_system_test() {\n    print_step \"TEST\" \"검증 시스템 자체 테스트\"\n    \n    if python3 test_migration_verification_system.py; then\n        print_success \"검증 시스템 테스트 완료\"\n        return 0\n    else\n        print_error \"검증 시스템 테스트 실패\"\n        return 1\n    fi\n}\n\n# 로그 정리\ncleanup_logs() {\n    print_step \"CLEANUP\" \"오래된 로그 정리\"\n    \n    DAYS=${1:-30}\n    \n    # 상태 보고 시스템을 통한 정리\n    if python3 migration_status_reporter.py cleanup \"$DAYS\"; then\n        print_success \"로그 정리 완료 (${DAYS}일 이전)\"\n    else\n        print_warning \"로그 정리 중 일부 오류 발생\"\n    fi\n    \n    # 추가 정리 작업\n    find . -name \"*.log\" -type f -mtime +$DAYS -delete 2>/dev/null || true\n    find . -name \"*_report_*.txt\" -type f -mtime +$DAYS -delete 2>/dev/null || true\n    \n    print_success \"추가 로그 파일 정리 완료\"\n}\n\n# 전체 검증 실행\nrun_full_verification() {\n    print_info \"전체 마이그레이션 검증을 시작합니다...\"\n    echo \"\"\n    \n    # 상태 보고 시작\n    python3 -c \"\nfrom migration_status_reporter import MigrationStatusReporter\nreporter = MigrationStatusReporter()\nreporter.start_migration_phase('full_verification', '전체 마이그레이션 검증')\n\" 2>/dev/null || true\n    \n    OVERALL_SUCCESS=true\n    \n    # 1. 백업 검증\n    if run_backup_verification; then\n        BACKUP_RESULT=0\n    else\n        BACKUP_RESULT=1\n        OVERALL_SUCCESS=false\n    fi\n    \n    echo \"\"\n    \n    # 2. 롤백 테스트\n    if run_rollback_test; then\n        ROLLBACK_RESULT=0\n    else\n        ROLLBACK_RESULT=1\n        OVERALL_SUCCESS=false\n    fi\n    \n    echo \"\"\n    \n    # 3. 마이그레이션 후 검증\n    if run_post_migration_verification; then\n        POST_MIGRATION_RESULT=0\n    else\n        POST_MIGRATION_RESULT=1\n        OVERALL_SUCCESS=false\n    fi\n    \n    echo \"\"\n    \n    # 4. 보고서 생성\n    generate_comprehensive_report\n    \n    # 상태 보고 완료\n    python3 -c \"\nfrom migration_status_reporter import MigrationStatusReporter\nreporter = MigrationStatusReporter()\nreporter.complete_migration_phase('full_verification', '전체 마이그레이션 검증', 0, $OVERALL_SUCCESS)\nreporter.finalize_session('full_verification_completed')\n\" 2>/dev/null || true\n    \n    echo \"\"\n    echo \"==================================================================\"\n    \n    if [ \"$OVERALL_SUCCESS\" = true ]; then\n        print_success \"🎉 전체 마이그레이션 검증이 성공적으로 완료되었습니다!\"\n        echo \"\"\n        print_info \"다음 단계:\"\n        echo \"  1. 생성된 보고서를 검토하세요\"\n        echo \"  2. 워치햄스터 시스템을 정상적으로 사용할 수 있습니다\"\n        echo \"  3. 정기적으로 시스템 상태를 모니터링하세요\"\n        return 0\n    else\n        print_error \"❌ 일부 검증이 실패했습니다\"\n        echo \"\"\n        print_info \"권장 조치:\"\n        echo \"  1. 실패한 항목의 상세 로그를 확인하세요\"\n        echo \"  2. 문제를 해결하거나 롤백을 고려하세요\"\n        echo \"  3. 롤백 명령어: ./rollback_migration.sh\"\n        return 1\n    fi\n}\n\n# 메인 실행 로직\nmain() {\n    # 환경 확인\n    check_environment\n    echo \"\"\n    \n    # 옵션 처리\n    case \"${1:-}\" in\n        --help|-h)\n            show_usage\n            exit 0\n            ;;\n        --backup-only)\n            run_backup_verification\n            exit $?\n            ;;\n        --rollback-only)\n            run_rollback_test\n            exit $?\n            ;;\n        --post-only)\n            run_post_migration_verification\n            exit $?\n            ;;\n        --report-only)\n            generate_comprehensive_report\n            exit 0\n            ;;\n        --test-system)\n            run_system_test\n            exit $?\n            ;;\n        --cleanup)\n            cleanup_logs \"${2:-30}\"\n            exit 0\n            ;;\n        --full|\"\")\n            run_full_verification\n            exit $?\n            ;;\n        *)\n            print_error \"알 수 없는 옵션: $1\"\n            echo \"\"\n            show_usage\n            exit 1\n            ;;\n    esac\n}\n\n# 스크립트 실행\nmain \"$@\"",
  "commands": [
    "set -e  # 오류 시 중단",
    "echo \"🚀 POSCO 워치햄스터 v2.0 마이그레이션 검증 시스템 실행\"",
    "echo \"==================================================================\"",
    "echo -e \"${BLUE}[단계 $1]${NC} $2\"",
    "echo -e \"${GREEN}✅ $1${NC}\"",
    "echo -e \"${YELLOW}⚠️ $1${NC}\"",
    "echo -e \"${RED}❌ $1${NC}\"",
    "echo -e \"${CYAN}ℹ️ $1${NC}\"",
    "echo \"사용법: $0 [옵션]\"",
    "echo \"\"",
    "echo \"옵션:\"",
    "echo \"  --full              전체 검증 실행 (기본값)\"",
    "echo \"  --backup-only       백업 검증만 실행\"",
    "echo \"  --rollback-only     롤백 테스트만 실행\"",
    "echo \"  --post-only         마이그레이션 후 검증만 실행\"",
    "echo \"  --report-only       보고서 생성만 실행\"",
    "echo \"  --test-system       검증 시스템 자체 테스트\"",
    "echo \"  --cleanup           오래된 로그 정리\"",
    "echo \"  --help              이 도움말 표시\"",
    "echo \"\"",
    "echo \"예시:\"",
    "echo \"  $0                  # 전체 검증 실행\"",
    "echo \"  $0 --backup-only    # 백업 검증만 실행\"",
    "echo \"  $0 --test-system    # 검증 시스템 테스트\"",
    "if ! command -v python3 &> /dev/null; then",
    "print_error \"Python3가 설치되지 않았습니다\"",
    "PYTHON_VERSION=$(python3 --version 2>&1 | cut -d' ' -f2)",
    "print_success \"Python 버전: $PYTHON_VERSION\"",
    "if python3 migration_verification_system.py backup-check; then",
    "if python3 test_rollback_functionality.py; then",
    "if python3 post_migration_verification.py; then",
    "if python3 migration_verification_system.py report; then",
    "if python3 migration_status_reporter.py report; then",
    "echo \"==================================================================\"",
    "echo \"POSCO 워치햄스터 v2.0 마이그레이션 검증 통합 보고서\"",
    "echo \"==================================================================\"",
    "echo \"생성 시간: $(date '+%Y-%m-%d %H:%M:%S')\"",
    "echo \"실행 스크립트: $0 $*\"",
    "echo \"\"",
    "echo \"📋 실행된 검증 항목\"",
    "echo \"------------------------------------------------------------------\"",
    "echo \"✅ 백업 안전성 검증: 통과\"",
    "echo \"❌ 백업 안전성 검증: 실패\"",
    "echo \"✅ 롤백 기능 테스트: 통과\"",
    "echo \"❌ 롤백 기능 테스트: 실패\"",
    "echo \"✅ 마이그레이션 후 검증: 통과\"",
    "echo \"❌ 마이그레이션 후 검증: 실패\"",
    "echo \"\"",
    "echo \"📊 전체 결과 요약\"",
    "echo \"------------------------------------------------------------------\"",
    "echo \"전체 테스트: ${TOTAL_TESTS}개\"",
    "echo \"통과: ${PASSED_TESTS}개\"",
    "echo \"실패: $((TOTAL_TESTS - PASSED_TESTS))개\"",
    "echo \"\"",
    "echo \"🎉 결론: 모든 검증이 성공적으로 완료되었습니다!\"",
    "echo \"   마이그레이션이 안전하게 완료되었으며 시스템이 정상 작동합니다.\"",
    "echo \"\"",
    "echo \"❌ 결론: 일부 검증이 실패했습니다.\"",
    "echo \"   실패한 항목을 검토하고 필요시 롤백을 고려하세요.\"",
    "echo \"   롤백 명령어: ./rollback_migration.sh\"",
    "echo \"\"",
    "echo \"📞 지원 정보\"",
    "echo \"------------------------------------------------------------------\"",
    "echo \"- 상세 로그: migration_logs/ 디렉토리\"",
    "echo \"- 개별 보고서: migration_reports/ 디렉토리\"",
    "echo \"- 검증 재실행: $0\"",
    "echo \"- 롤백 실행: ./rollback_migration.sh\"",
    "echo \"\"",
    "echo \"==================================================================\"",
    "if python3 test_migration_verification_system.py; then",
    "if python3 migration_status_reporter.py cleanup \"$DAYS\"; then",
    "echo \"\"",
    "python3 -c \"",
    "echo \"\"",
    "echo \"\"",
    "echo \"\"",
    "python3 -c \"",
    "echo \"\"",
    "echo \"==================================================================\"",
    "echo \"\"",
    "echo \"  1. 생성된 보고서를 검토하세요\"",
    "echo \"  2. 워치햄스터 시스템을 정상적으로 사용할 수 있습니다\"",
    "echo \"  3. 정기적으로 시스템 상태를 모니터링하세요\"",
    "echo \"\"",
    "echo \"  1. 실패한 항목의 상세 로그를 확인하세요\"",
    "echo \"  2. 문제를 해결하거나 롤백을 고려하세요\"",
    "echo \"  3. 롤백 명령어: ./rollback_migration.sh\"",
    "echo \"\"",
    "echo \"\""
  ],
  "variables": {
    "RED": "'\\033[0;31m'",
    "GREEN": "'\\033[0;32m'",
    "YELLOW": "'\\033[1;33m'",
    "BLUE": "'\\033[0;34m'",
    "PURPLE": "'\\033[0;35m'",
    "CYAN": "'\\033[0;36m'",
    "NC": "'\\033[0m' # No Color",
    "PYTHON_VERSION": "$(python3 --version 2>&1 | cut -d' ' -f2)",
    "REQUIRED_SCRIPTS": "(",
    "TIMESTAMP": "$(date +%Y%m%d_%H%M%S)",
    "TOTAL_TESTS": "3",
    "PASSED_TESTS": "0",
    "DAYS": "${1:-30}",
    "reporter": "MigrationStatusReporter()",
    "OVERALL_SUCCESS": "false",
    "BACKUP_RESULT": "1",
    "ROLLBACK_RESULT": "1",
    "POST_MIGRATION_RESULT": "1"
  }
}