{
  "file_path": "check_migration_requirements.sh",
  "file_type": ".sh",
  "content": "#!/bin/bash\n# POSCO 워치햄스터 v2.0 마이그레이션 요구사항 체크 스크립트\n\necho \"🔍 POSCO 워치햄스터 v2.0 마이그레이션 요구사항 확인\"\n\n# 색상 정의\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\nprint_check() {\n    echo -e \"${BLUE}[확인]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}✅ $1${NC}\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}⚠️ $1${NC}\"\n}\n\nprint_error() {\n    echo -e \"${RED}❌ $1${NC}\"\n}\n\nERRORS=0\nWARNINGS=0\n\n# Python 버전 확인\nprint_check \"Python 버전 확인\"\nif command -v python3 &> /dev/null; then\n    PYTHON_VERSION=$(python3 --version 2>&1 | cut -d' ' -f2)\n    print_success \"Python 버전: $PYTHON_VERSION\"\n    \n    # Python 3.8+ 확인\n    if python3 -c \"import sys; exit(0 if sys.version_info >= (3, 8) else 1)\"; then\n        print_success \"Python 3.8+ 요구사항 충족\"\n    else\n        print_error \"Python 3.8 이상이 필요합니다\"\n        ERRORS=$((ERRORS + 1))\n    fi\nelse\n    print_error \"Python3가 설치되지 않았습니다\"\n    ERRORS=$((ERRORS + 1))\nfi\n\n# 필수 패키지 확인\nprint_check \"필수 패키지 확인\"\npython3 -c \"\nimport sys\npackages = ['requests', 'psutil', 'json', 'datetime', 'logging', 'subprocess', 'threading']\nmissing = []\navailable = []\n\nfor pkg in packages:\n    try:\n        __import__(pkg)\n        available.append(pkg)\n    except ImportError:\n        missing.append(pkg)\n\nfor pkg in available:\n    print(f'✅ {pkg}')\n\nfor pkg in missing:\n    print(f'❌ {pkg} - 설치 필요')\n\nif missing:\n    print(f'\\\\n설치 명령어: pip3 install {\\\" \\\".join(missing)}')\n    exit(len(missing))\nelse:\n    exit(0)\n\"\n\nif [ $? -eq 0 ]; then\n    print_success \"모든 필수 패키지 사용 가능\"\nelse\n    print_error \"일부 필수 패키지가 누락되었습니다\"\n    ERRORS=$((ERRORS + 1))\nfi\n\n# 디스크 공간 확인\nprint_check \"디스크 공간 확인\"\nAVAILABLE_SPACE=$(df . | tail -1 | awk '{print $4}')\nREQUIRED_SPACE=1048576  # 1GB in KB\n\nif [ \"$AVAILABLE_SPACE\" -gt \"$REQUIRED_SPACE\" ]; then\n    SPACE_GB=$((AVAILABLE_SPACE / 1024 / 1024))\n    print_success \"사용 가능한 디스크 공간: ${SPACE_GB}GB\"\nelse\n    print_error \"디스크 공간 부족 (최소 1GB 필요)\"\n    ERRORS=$((ERRORS + 1))\nfi\n\n# 메모리 확인\nprint_check \"메모리 상태 확인\"\nif command -v free &> /dev/null; then\n    AVAILABLE_MEM=$(free -m | awk 'NR==2{print $7}')\n    if [ \"$AVAILABLE_MEM\" -gt 512 ]; then\n        print_success \"사용 가능한 메모리: ${AVAILABLE_MEM}MB\"\n    else\n        print_warning \"메모리가 부족할 수 있습니다 (권장: 512MB 이상)\"\n        WARNINGS=$((WARNINGS + 1))\n    fi\nelif command -v vm_stat &> /dev/null; then\n    # macOS\n    print_success \"메모리 상태 확인 (macOS)\"\nelse\n    print_warning \"메모리 상태를 확인할 수 없습니다\"\n    WARNINGS=$((WARNINGS + 1))\nfi\n\n# 기존 시스템 확인\nprint_check \"기존 시스템 확인\"\n\nif [ -f \"Monitoring/Posco_News_mini/monitor_WatchHamster.py\" ]; then\n    print_success \"기존 워치햄스터 발견\"\nelse\n    print_error \"기존 워치햄스터를 찾을 수 없습니다\"\n    ERRORS=$((ERRORS + 1))\nfi\n\nif [ -f \"watchhamster_control_center.sh\" ]; then\n    print_success \"워치햄스터 제어센터 발견\"\nelse\n    print_warning \"워치햄스터 제어센터를 찾을 수 없습니다\"\n    WARNINGS=$((WARNINGS + 1))\nfi\n\n# v2 컴포넌트 확인\nprint_check \"v2 컴포넌트 확인\"\n\nV2_COMPONENTS=(\n    \"Monitoring/Posco_News_mini_v2/core/enhanced_process_manager.py\"\n    \"Monitoring/Posco_News_mini_v2/core/module_registry.py\"\n    \"Monitoring/Posco_News_mini_v2/core/notification_manager.py\"\n    \"Monitoring/Posco_News_mini_v2/core/watchhamster_integration.py\"\n)\n\nfor component in \"${V2_COMPONENTS[@]}\"; do\n    if [ -f \"$component\" ]; then\n        print_success \"$(basename \"$component\") 발견\"\n    else\n        print_error \"$component 누락\"\n        ERRORS=$((ERRORS + 1))\n    fi\ndone\n\n# 실행 중인 프로세스 확인\nprint_check \"실행 중인 프로세스 확인\"\n\nif pgrep -f \"monitor_WatchHamster.py\" > /dev/null; then\n    print_warning \"워치햄스터가 실행 중입니다 (마이그레이션 시 중지됩니다)\"\n    WARNINGS=$((WARNINGS + 1))\nelse\n    print_success \"워치햄스터가 중지되어 있습니다\"\nfi\n\nif pgrep -f \"python.*posco\" > /dev/null; then\n    RUNNING_COUNT=$(pgrep -f \"python.*posco\" | wc -l)\n    print_warning \"POSCO 관련 프로세스 ${RUNNING_COUNT}개가 실행 중입니다\"\n    WARNINGS=$((WARNINGS + 1))\nelse\n    print_success \"POSCO 관련 프로세스가 실행되지 않고 있습니다\"\nfi\n\n# 네트워크 연결 확인\nprint_check \"네트워크 연결 확인\"\n\nif curl -s --max-time 5 https://www.google.com > /dev/null; then\n    print_success \"인터넷 연결 정상\"\nelse\n    print_warning \"인터넷 연결을 확인할 수 없습니다\"\n    WARNINGS=$((WARNINGS + 1))\nfi\n\n# 권한 확인\nprint_check \"파일 권한 확인\"\n\nif [ -w \".\" ]; then\n    print_success \"현재 디렉토리 쓰기 권한 있음\"\nelse\n    print_error \"현재 디렉토리 쓰기 권한 없음\"\n    ERRORS=$((ERRORS + 1))\nfi\n\n# 결과 요약\necho \"\"\necho \"📋 마이그레이션 요구사항 확인 결과\"\necho \"==================================\"\n\nif [ $ERRORS -eq 0 ] && [ $WARNINGS -eq 0 ]; then\n    print_success \"모든 요구사항이 충족되었습니다!\"\n    echo \"\"\n    echo \"🚀 마이그레이션을 시작할 수 있습니다:\"\n    echo \"   ./migrate_to_v2.sh\"\n    exit 0\nelif [ $ERRORS -eq 0 ]; then\n    print_warning \"경고 ${WARNINGS}개가 있지만 마이그레이션 가능합니다\"\n    echo \"\"\n    echo \"🚀 마이그레이션을 시작할 수 있습니다:\"\n    echo \"   ./migrate_to_v2.sh\"\n    exit 0\nelse\n    print_error \"오류 ${ERRORS}개, 경고 ${WARNINGS}개\"\n    echo \"\"\n    echo \"❌ 마이그레이션 전에 오류를 해결해주세요\"\n    echo \"\"\n    echo \"💡 도움말:\"\n    echo \"   - Python 설치: https://www.python.org/downloads/\"\n    echo \"   - 패키지 설치: pip3 install requests psutil\"\n    echo \"   - 디스크 공간 확보: 불필요한 파일 삭제\"\n    exit 1\nfi",
  "commands": [
    "echo \"🔍 POSCO 워치햄스터 v2.0 마이그레이션 요구사항 확인\"",
    "echo -e \"${BLUE}[확인]${NC} $1\"",
    "echo -e \"${GREEN}✅ $1${NC}\"",
    "echo -e \"${YELLOW}⚠️ $1${NC}\"",
    "echo -e \"${RED}❌ $1${NC}\"",
    "print_check \"Python 버전 확인\"",
    "if command -v python3 &> /dev/null; then",
    "PYTHON_VERSION=$(python3 --version 2>&1 | cut -d' ' -f2)",
    "print_success \"Python 버전: $PYTHON_VERSION\"",
    "if python3 -c \"import sys; exit(0 if sys.version_info >= (3, 8) else 1)\"; then",
    "print_success \"Python 3.8+ 요구사항 충족\"",
    "print_error \"Python 3.8 이상이 필요합니다\"",
    "print_error \"Python3가 설치되지 않았습니다\"",
    "python3 -c \"",
    "print(f'\\\\n설치 명령어: pip3 install {\\\" \\\".join(missing)}')",
    "if pgrep -f \"python.*posco\" > /dev/null; then",
    "RUNNING_COUNT=$(pgrep -f \"python.*posco\" | wc -l)",
    "echo \"\"",
    "echo \"📋 마이그레이션 요구사항 확인 결과\"",
    "echo \"==================================\"",
    "echo \"\"",
    "echo \"🚀 마이그레이션을 시작할 수 있습니다:\"",
    "echo \"   ./migrate_to_v2.sh\"",
    "echo \"\"",
    "echo \"🚀 마이그레이션을 시작할 수 있습니다:\"",
    "echo \"   ./migrate_to_v2.sh\"",
    "echo \"\"",
    "echo \"❌ 마이그레이션 전에 오류를 해결해주세요\"",
    "echo \"\"",
    "echo \"💡 도움말:\"",
    "echo \"   - Python 설치: https://www.python.org/downloads/\"",
    "echo \"   - 패키지 설치: pip3 install requests psutil\"",
    "echo \"   - 디스크 공간 확보: 불필요한 파일 삭제\""
  ],
  "variables": {
    "RED": "'\\033[0;31m'",
    "GREEN": "'\\033[0;32m'",
    "YELLOW": "'\\033[1;33m'",
    "BLUE": "'\\033[0;34m'",
    "NC": "'\\033[0m' # No Color",
    "ERRORS": "$((ERRORS + 1))",
    "WARNINGS": "$((WARNINGS + 1))",
    "PYTHON_VERSION": "$(python3 --version 2>&1 | cut -d' ' -f2)",
    "packages": "['requests', 'psutil', 'json', 'datetime', 'logging', 'subprocess', 'threading']",
    "missing": "[]",
    "available": "[]",
    "AVAILABLE_SPACE": "$(df . | tail -1 | awk '{print $4}')",
    "REQUIRED_SPACE": "1048576  # 1GB in KB",
    "SPACE_GB": "$((AVAILABLE_SPACE / 1024 / 1024))",
    "AVAILABLE_MEM": "$(free -m | awk 'NR==2{print $7}')",
    "V2_COMPONENTS": "(",
    "RUNNING_COUNT": "$(pgrep -f \"python.*posco\" | wc -l)"
  }
}