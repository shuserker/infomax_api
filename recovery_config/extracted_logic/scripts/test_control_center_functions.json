{
  "file_path": "test_control_center_functions.sh",
  "file_type": ".sh",
  "content": "#!/bin/bash\n# Test script for control center functions\n\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\ncd \"$SCRIPT_DIR\"\n\necho \"üß™ Testing Control Center Functions\"\necho \"==================================\"\n\n# Test 1: Check syntax\necho \"1. Testing script syntax...\"\nif bash -n watchhamster_control_center.sh; then\n    echo \"‚úÖ Script syntax is valid\"\nelse\n    echo \"‚ùå Script has syntax errors\"\n    exit 1\nfi\n\n# Test 2: Check if functions exist in the file\necho\necho \"2. Testing function definitions in file...\"\n\nfunctions_to_check=(\n    \"start_watchhamster\"\n    \"stop_watchhamster\" \n    \"check_watchhamster_status\"\n    \"manage_modules\"\n    \"check_managed_processes\"\n    \"control_individual_module\"\n    \"restart_individual_module\"\n    \"stop_individual_module\"\n    \"show_individual_module_log\"\n)\n\nfor func in \"${functions_to_check[@]}\"; do\n    if grep -q \"^$func()\" watchhamster_control_center.sh; then\n        echo \"‚úÖ $func function is defined\"\n    else\n        echo \"‚ùå $func function is NOT defined\"\n    fi\ndone\n\necho\necho \"3. Testing process detection logic (current system state)...\"\n\n# Test check_managed_processes function (dry run)\necho \"Testing managed processes detection:\"\nprocesses=(\"posco_main_notifier.py\" \"realtime_news_monitor.py\" \"integrated_report_scheduler.py\")\nrunning_count=0\ntotal_count=${#processes[@]}\n\nfor process in \"${processes[@]}\"; do\n    if pgrep -f \"$process\" > /dev/null 2>&1; then\n        PID=$(pgrep -f \"$process\")\n        echo \"  ‚úÖ ${process%.*} (PID: $PID) - RUNNING\"\n        ((running_count++))\n    else\n        echo \"  ‚ùå ${process%.*} - NOT RUNNING\"\n    fi\ndone\n\necho \"  üìä Status: $running_count/$total_count modules running\"\n\necho\necho \"4. Testing watchhamster detection...\"\nif pgrep -f \"monitor_WatchHamster.py\" > /dev/null 2>&1; then\n    WATCHHAMSTER_PID=$(pgrep -f \"monitor_WatchHamster.py\")\n    echo \"‚úÖ WatchHamster is running (PID: $WATCHHAMSTER_PID)\"\nelse\n    echo \"‚ùå WatchHamster is not running\"\nfi\n\necho\necho \"5. Testing required files...\"\nrequired_files=(\n    \"lib_wt_common.sh\"\n    \"Monitoring/Posco_News_mini/monitor_WatchHamster.py\"\n)\n\nfor file in \"${required_files[@]}\"; do\n    if [[ -f \"$file\" ]]; then\n        echo \"‚úÖ $file exists\"\n    else\n        echo \"‚ùå $file is missing\"\n    fi\ndone\n\necho\necho \"üéâ Control Center Function Testing completed!\"\necho \"All required functions are properly implemented and ready for use.\"",
  "commands": [
    "SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
    "cd \"$SCRIPT_DIR\"",
    "echo \"üß™ Testing Control Center Functions\"",
    "echo \"==================================\"",
    "echo \"1. Testing script syntax...\"",
    "echo \"‚úÖ Script syntax is valid\"",
    "echo \"‚ùå Script has syntax errors\"",
    "echo",
    "echo \"2. Testing function definitions in file...\"",
    "echo \"‚úÖ $func function is defined\"",
    "echo \"‚ùå $func function is NOT defined\"",
    "echo",
    "echo \"3. Testing process detection logic (current system state)...\"",
    "echo \"Testing managed processes detection:\"",
    "echo \"  ‚úÖ ${process%.*} (PID: $PID) - RUNNING\"",
    "echo \"  ‚ùå ${process%.*} - NOT RUNNING\"",
    "echo \"  üìä Status: $running_count/$total_count modules running\"",
    "echo",
    "echo \"4. Testing watchhamster detection...\"",
    "echo \"‚úÖ WatchHamster is running (PID: $WATCHHAMSTER_PID)\"",
    "echo \"‚ùå WatchHamster is not running\"",
    "echo",
    "echo \"5. Testing required files...\"",
    "echo \"‚úÖ $file exists\"",
    "echo \"‚ùå $file is missing\"",
    "echo",
    "echo \"üéâ Control Center Function Testing completed!\"",
    "echo \"All required functions are properly implemented and ready for use.\""
  ],
  "variables": {
    "SCRIPT_DIR": "\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"",
    "functions_to_check": "(",
    "running_count": "0",
    "total_count": "${#processes[@]}",
    "PID": "$(pgrep -f \"$process\")",
    "WATCHHAMSTER_PID": "$(pgrep -f \"monitor_WatchHamster.py\")",
    "required_files": "("
  }
}