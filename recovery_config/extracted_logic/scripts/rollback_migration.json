{
  "file_path": "rollback_migration.sh",
  "file_type": ".sh",
  "content": "#!/bin/bash\n# POSCO 워치햄스터 v2.0 마이그레이션 롤백 스크립트\n\nset -e  # 오류 시 중단\n\necho \"🔄 POSCO 워치햄스터 마이그레이션 롤백 시작\"\n\n# 색상 정의\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\nprint_step() {\n    echo -e \"${BLUE}[단계 $1]${NC} $2\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}✅ $1${NC}\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}⚠️ $1${NC}\"\n}\n\nprint_error() {\n    echo -e \"${RED}❌ $1${NC}\"\n}\n\n# 백업 디렉토리 찾기\nprint_step \"1\" \"백업 디렉토리 확인\"\n\nBACKUP_DIR=$(ls -1d backup_* 2>/dev/null | tail -1)\n\nif [ -z \"$BACKUP_DIR\" ]; then\n    print_error \"백업 디렉토리를 찾을 수 없습니다.\"\n    echo \"사용 가능한 백업:\"\n    ls -1d backup_* 2>/dev/null || echo \"백업 없음\"\n    exit 1\nfi\n\nprint_success \"백업 디렉토리 발견: $BACKUP_DIR\"\n\n# 현재 실행 중인 프로세스 중지\nprint_step \"2\" \"현재 프로세스 중지\"\n\nif pgrep -f \"monitor_WatchHamster.py\" > /dev/null; then\n    print_warning \"워치햄스터 중지 중...\"\n    pkill -f \"monitor_WatchHamster.py\"\n    sleep 5\nfi\n\nif pgrep -f \"python.*posco\" > /dev/null; then\n    print_warning \"POSCO 관련 프로세스 중지 중...\"\n    pkill -f \"python.*posco\"\n    sleep 3\nfi\n\nprint_success \"프로세스 중지 완료\"\n\n# 백업에서 복원\nprint_step \"3\" \"백업에서 시스템 복원\"\n\n# 현재 v2 시스템 백업 (롤백 전)\nROLLBACK_BACKUP=\"rollback_backup_$(date +%Y%m%d_%H%M%S)\"\nmkdir -p \"$ROLLBACK_BACKUP\"\ncp -r Monitoring/ \"$ROLLBACK_BACKUP/\" 2>/dev/null || true\ncp watchhamster_control_center.sh \"$ROLLBACK_BACKUP/\" 2>/dev/null || true\n\nprint_success \"롤백 전 현재 상태 백업: $ROLLBACK_BACKUP\"\n\n# 백업에서 복원\nif [ -d \"$BACKUP_DIR/Monitoring\" ]; then\n    rm -rf Monitoring/\n    cp -r \"$BACKUP_DIR/Monitoring\" ./\n    print_success \"Monitoring 디렉토리 복원\"\nfi\n\nif [ -f \"$BACKUP_DIR/watchhamster_control_center.sh\" ]; then\n    cp \"$BACKUP_DIR/watchhamster_control_center.sh\" ./\n    chmod +x watchhamster_control_center.sh\n    print_success \"워치햄스터 제어센터 스크립트 복원\"\nfi\n\n# 로그 파일 복원 (선택적)\nif ls \"$BACKUP_DIR\"/*.log 1> /dev/null 2>&1; then\n    cp \"$BACKUP_DIR\"/*.log ./\n    print_success \"로그 파일 복원\"\nfi\n\n# v2 디렉토리 제거\nprint_step \"4\" \"v2 아키텍처 제거\"\n\nif [ -d \"Monitoring/Posco_News_mini_v2\" ]; then\n    rm -rf \"Monitoring/Posco_News_mini_v2\"\n    print_success \"v2 아키텍처 디렉토리 제거\"\nfi\n\n# 복원 검증\nprint_step \"5\" \"복원 검증\"\n\n# 기존 워치햄스터 테스트\nprint_warning \"기존 워치햄스터 테스트 시작 (10초간)...\"\ntimeout 10s python3 Monitoring/Posco_News_mini/monitor_WatchHamster.py &\nTEST_PID=$!\n\nsleep 5\n\nif kill -0 $TEST_PID 2>/dev/null; then\n    print_success \"기존 워치햄스터 테스트 성공\"\n    kill $TEST_PID 2>/dev/null\n    wait $TEST_PID 2>/dev/null || true\nelse\n    print_error \"기존 워치햄스터 테스트 실패\"\nfi\n\n# 롤백 완료\nprint_step \"6\" \"롤백 완료\"\n\necho \"\"\necho \"🔄 POSCO 워치햄스터 마이그레이션 롤백 완료!\"\necho \"\"\necho \"📋 롤백 결과:\"\necho \"  ✅ 기존 시스템으로 복원\"\necho \"  ✅ v2 아키텍처 제거\"\necho \"  ✅ 백업에서 설정 복원\"\necho \"\"\necho \"📦 백업 정보:\"\necho \"  - 원본 백업: $BACKUP_DIR\"\necho \"  - 롤백 전 백업: $ROLLBACK_BACKUP\"\necho \"\"\necho \"🚀 다음 단계:\"\necho \"  1. ./watchhamster_control_center.sh 실행\"\necho \"  2. 기존 방식으로 시스템 시작\"\necho \"\"\necho \"💡 참고:\"\necho \"  - v2로 다시 마이그레이션하려면: ./migrate_to_v2.sh\"\necho \"  - 문제 발생 시 로그 확인: tail -f *.log\"\necho \"\"",
  "commands": [
    "set -e  # 오류 시 중단",
    "echo \"🔄 POSCO 워치햄스터 마이그레이션 롤백 시작\"",
    "echo -e \"${BLUE}[단계 $1]${NC} $2\"",
    "echo -e \"${GREEN}✅ $1${NC}\"",
    "echo -e \"${YELLOW}⚠️ $1${NC}\"",
    "echo -e \"${RED}❌ $1${NC}\"",
    "echo \"사용 가능한 백업:\"",
    "ls -1d backup_* 2>/dev/null || echo \"백업 없음\"",
    "if pgrep -f \"python.*posco\" > /dev/null; then",
    "pkill -f \"python.*posco\"",
    "timeout 10s python3 Monitoring/Posco_News_mini/monitor_WatchHamster.py &",
    "echo \"\"",
    "echo \"🔄 POSCO 워치햄스터 마이그레이션 롤백 완료!\"",
    "echo \"\"",
    "echo \"📋 롤백 결과:\"",
    "echo \"  ✅ 기존 시스템으로 복원\"",
    "echo \"  ✅ v2 아키텍처 제거\"",
    "echo \"  ✅ 백업에서 설정 복원\"",
    "echo \"\"",
    "echo \"📦 백업 정보:\"",
    "echo \"  - 원본 백업: $BACKUP_DIR\"",
    "echo \"  - 롤백 전 백업: $ROLLBACK_BACKUP\"",
    "echo \"\"",
    "echo \"🚀 다음 단계:\"",
    "echo \"  1. ./watchhamster_control_center.sh 실행\"",
    "echo \"  2. 기존 방식으로 시스템 시작\"",
    "echo \"\"",
    "echo \"💡 참고:\"",
    "echo \"  - v2로 다시 마이그레이션하려면: ./migrate_to_v2.sh\"",
    "echo \"  - 문제 발생 시 로그 확인: tail -f *.log\"",
    "echo \"\""
  ],
  "variables": {
    "RED": "'\\033[0;31m'",
    "GREEN": "'\\033[0;32m'",
    "YELLOW": "'\\033[1;33m'",
    "BLUE": "'\\033[0;34m'",
    "NC": "'\\033[0m' # No Color",
    "BACKUP_DIR": "$(ls -1d backup_* 2>/dev/null | tail -1)",
    "ROLLBACK_BACKUP": "\"rollback_backup_$(date +%Y%m%d_%H%M%S)\"",
    "TEST_PID": "$!"
  }
}